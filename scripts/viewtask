#!/usr/bin/env bash

function print_task_comments {
  local task_phid=$1
  local tmpfile=$2
  local arcrc=$(<~/.arcrc)
  local conduit_uri=$(echo $arcrc | jq '.dotfiles_env_vars.conduit_uri' --raw-output)

  local query="{
    \"objectIdentifier\": \"$task_phid\"
  }"

  local json="$(
    echo $query | arc call-conduit --conduit-uri $conduit_uri transaction.search
  )"

  local comments=$(echo $json | jq ".response.data[].comments[]?.content.raw" --raw-output)

  echo "-------------------------------------------------------------------------------" >> "$tmpfile"
  for comment in "${comments[@]}"; do
    echo "" >> "$tmpfile"
    echo "" >> "$tmpfile"
    echo ">${comment}" >> "$tmpfile"
  done
}

main() {
  echo "NOTE: fetching raw task: $1"

  local task_id=${1/T/}
  local arcrc=$(<~/.arcrc)
  local project_phid=$(echo $arcrc | jq '.dotfiles_env_vars.project')
  local conduit_uri=$(echo $arcrc | jq '.dotfiles_env_vars.conduit_uri' --raw-output)

  # NOTE: Obtain the phid for the given maniphest task
  local json="$(
    echo '{
      "task_id": "'"$task_id"'"
    }' | arc call-conduit --conduit-uri $conduit_uri maniphest.info
  )"

  local task_title=$(echo $json | jq ".response.title" --raw-output)
  local task_url=$(echo $json | jq ".response.uri" --raw-output)
  local task_status=$(echo $json | jq ".response.status" --raw-output)
  local task_description=$(echo $json | jq ".response.description" --raw-output)
  local task_phid=$(echo $json | jq ".response.phid" --raw-output)

  mkdir -p ".git/tasks"

  local dir="`git rev-parse --git-dir`"
  local tmpfile="$dir/tasks/$1.md"
  trap "rm -f '$tmpfile'" EXIT

  # NOTE: Print metadata to file
  echo "$task_title" >> "$tmpfile"
  echo "=====================================================================" >> "$tmpfile"
  echo "url: $task_url" >> "$tmpfile"
  echo "" >> "$tmpfile"
  echo "$task_description" >> "$tmpfile"
  
  print_task_comments $task_phid $tmpfile

  # NOTE: open patch file in neovim 
  $EDITOR "$tmpfile"
}

main "$1"
