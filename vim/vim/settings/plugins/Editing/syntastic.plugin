"-------------------------------------------------------------------------------
" Install / load plugin
"-------------------------------------------------------------------------------
" Plug 'scrooloose/syntastic' "{{{
Plug 'lencioni/syntastic' "{{{

"-------------------------------------------------------------------------------
" Settings
"-------------------------------------------------------------------------------
" configure syntastic syntax checking to check on open as well as save
" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1

let g:syntastic_check_on_open = 0
let g:syntastic_check_on_save=0

let g:syntastic_enable_signs = 1
let g:syntastic_error_symbol = '✗'
let g:syntastic_style_error_symbol = '✠'
let g:syntastic_warning_symbol = '∆'
let g:syntastic_style_warning_symbol = '≈'

let g:syntastic_aggregate_errors = 1

let g:syntastic_javascript_checkers = ['eslint', 'jscs']

let g:syntastic_javascript_jshint_exec = 'jshint'
let g:syntastic_javascript_jshint_args = '--config /Users/alexander/.jshintrc'

let g:syntastic_javascript_jscs_args = '--config /Users/alexander/.jscsrc'
let g:syntastic_javascript_jscs_exec = 'jscs'

let g:syntastic_javascript_eslint_args = '--config /Users/alexander/.eslintrc'

let g:syntastic_ruby_checkers = ['mri', 'rubocop']

" let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': [],'passive_filetypes': [] }

"-------------------------------------------------------------------------------
" Functions
"-------------------------------------------------------------------------------
function! s:toggle_es6()
  if(index(g:syntastic_javascript_checkers, 'eslint') >= 0)
    let g:syntastic_javascript_checkers = ['jscs']
  else
    let g:syntastic_javascript_checkers = ['eslint', 'jscs']
  endif
endfunction
"-------------------------------------------------------------------------------
" Keybindings
"-------------------------------------------------------------------------------

autocmd FileType javascript nnoremap <C-w>e :SyntasticToggleMode<CR> :SyntasticCheck<CR>
nnoremap <leader>ln :lnext<CR>
nnoremap <leader>lp :lprevious<CR>
nnoremap <leader>cn :cnext<CR>
nnoremap <leader>cp :cprevious<CR>
cabbrev <silent> bd <C-r>=(getcmdtype()==#':' && getcmdpos()==1 ? 'lclose\|bdelete' : 'bd')<CR>
command! SyntasticToggleLinter call s:toggle_es6()
