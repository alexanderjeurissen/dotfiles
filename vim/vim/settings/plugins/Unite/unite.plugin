"-------------------------------------------------------------------------------
" Install / load plugin
"-------------------------------------------------------------------------------
Plug 'Shougo/unite.vim'

"-------------------------------------------------------------------------------
" Settings
"-------------------------------------------------------------------------------
let g:unite_data_directory='~/.vim/.cache/unite'
let g:unite_enable_start_insert=1
let g:unite_source_history_yank_enable=1
let g:unite_source_rec_max_cache_files=5000

" let g:unite_split_rule = 'botright' " make it look like Ctrl-P
let g:unite_prompt='Â» '

if executable('ag')
  let g:unite_source_rec_async_command= 'ag --nocolor --nogroup --hidden -g ""'
  let g:unite_source_grep_command='ag'
  let g:unite_source_grep_default_opts='--nocolor --nogroup -S -C4'
  let g:unite_source_grep_recursive_opt=''
elseif executable('ack')
  let g:unite_source_grep_command='ack'
  let g:unite_source_grep_default_opts='--no-heading --no-color -a -C4'
  let g:unite_source_grep_recursive_opt=''
endif

autocmd FileType unite call s:unite_settings()

"-------------------------------------------------------------------------------
" Functions
"-------------------------------------------------------------------------------
" let bundle = neobundle#get('unite.vim')
"
" function! bundle.hooks.on_source(bundle)
"   call unite#filters#matcher_default#use(['matcher_fuzzy'])
"   call unite#filters#sorter_default#use(['sorter_rank'])
"   call unite#custom#profile('files','context.smartcase', 1)
"   call unite#custom#source('line,outline','matchers','matcher_fuzzy')
" endfunction

function! s:unite_settings()
  imap <buffer> <C-j> <Plug>(unite_select_next_line)
  imap <buffer> <C-k> <Plug>(unite_select_previous_line)
  imap <buffer> <C-n> <Plug>(unite_select_next_line)
  imap <buffer> <C-p> <Plug>(unite_select_previous_line)
  nmap <buffer><expr> <C-h> unite#do_action('split')
  imap <buffer><expr> <C-h> unite#do_action('split')
  nmap <buffer><expr> <C-v> unite#do_action('vsplit')
  imap <buffer><expr> <C-v> unite#do_action('vsplit')
  nmap <buffer><expr> <C-t> unite#do_action('tabopen')
  imap <buffer><expr> <C-t> unite#do_action('tabopen')
  nmap <buffer> <esc> <plug>(unite_exit)
  imap <buffer> <esc> <plug>(unite_exit)
endfunction

"-------------------------------------------------------------------------------
" Keybindings
"-------------------------------------------------------------------------------
" nmap <space> [unite]
" nnoremap [unite] <nop>

nnoremap <silent> <leader>u :<C-u>Unite -no-split -toggle -buffer-name=files file_rec/async:! buffer file_mru<CR>
" call unite#custom#profile('caseInsensitive', 'ignorecase', 1)
nnoremap <silent> <leader>uf :<C-u>Unite -no-split -toggle -buffer-name=files file_rec/async:!<cr>

nnoremap <silent> <leader>ur :<C-u>Unite -no-split -buffer-name=recent file_mru<CR>
nnoremap <silent> <leader>uy :<C-u>Unite -no-split -buffer-name=yanks history/yank<CR>
nnoremap <silent> <leader>ut :<C-u>Unite -buffer-name=tabs tab<CR>
nnoremap <silent> <leader>uw :<C-u>Unite -buffer-name=windows window<CR>
nnoremap <silent> <leader>ub :<C-u>Unite -no-split -buffer-name=buffers buffer<CR>
nnoremap <silent> <leader>/ :<C-u>Unite -no-quit -buffer-name=search grep:.<CR>
nnoremap <silent> <leader>um :<C-u>Unite -auto-resize -buffer-name=mappings mapping<CR>
" nnoremap <silent> <leader>s :<C-u>Unite -quick-match buffer<CR>
nnoremap <silent> <leader>ure <Plug>(unite_redraw)<CR>
