# cat << ►_◄ > /dev/null


# ── General settings ──────────────────────────────────────────────────────────────────────────────

# Set a new keybinding to C-t {{{
  unbind C-r
  unbind C-b
  set -g prefix C-t
  bind C-t send-prefix
# }}}

set-option -sg escape-time 0 # change the escape time in tmux to zero
set-option -g history-limit 500000 # Increase scrollback history

# set -g default-command /bin/zsh
set -g default-shell /bin/zsh
set -g default-command "reattach-to-user-namespace -l zsh" # fix terminal-notifier

# set -ga terminal-overrides "xterm-256color"
set -ga terminal-overrides ",xterm-256color-italic:Tc"

set -g base-index 1 # start with window 1 (instead of 0)
set -g pane-base-index 1 # start with pane 1

setw -g mode-keys vi # enable vim mode

# vi-copy settings {{{
  bind-key -t vi-copy v begin-selection
  bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
  # bind-key -t vi-copy y copy-selection
  bind-key -t vi-copy C-v rectangle-toggle
  bind-key -t vi-copy Escape cancel
# }}}

# rename session to git repo {{{
  unbind n
  bind-key n run-shell "tmux rename-session $(basename $(git rev-parse --show-toplevel))"
# }}}

# Copy mode with C-t S
bind S copy-mode

# visual notification of activity in other windows {{{
  setw -g monitor-activity on
  set -g visual-activity on
# }}}

# Edit tmux.conf in default $EDITOR
bind e new-window -n '~/.tmux.conf' "zsh -c '\${EDITOR:-nvim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload tmux.conf {{{
  unbind r
  bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
# }}}


# ── Pane settings ─────────────────────────────────────────────────────────────────────────────────

# smart pane switching with awareness of vim splits {{{
  bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
  bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
  bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
  bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# }}}

# Pane resizing {{{
  bind-key -r H resize-pane -L "5"
  bind-key -r L resize-pane -R "5"
  bind-key -r J resize-pane -D "5"
  bind-key -r K resize-pane -U "5"
# }}}

# switch between previous and next pane {{{
  bind-key C-n next-window
  bind-key C-p previous-window
# }}}

# move panes (cycle) left and right {{{
  bind-key -r "<" swap-window -t -1
  bind-key -r ">" swap-window -t +1
# }}}

set-option remain-on-exit on # keep new-window 'terminal command' open after the command exits 0

# quick pane cycling {{{
  unbind ^A
  bind ^A select-pane -t :.+
# }}}


# ── Status/Window settings ────────────────────────────────────────────────────────────────────────

# Status options {{{
  set-option -g status on
  set-option -g status-interval 3000     # redraw status line every 10 seconds
  set-option -g status-justify "left"
  set-option -g status-left-length 100
  set-option -g status-right-length 500
# }}}

# Window options {{{
  # window is only constrained in size if a smaller client
  # is actively looking at it.
  setw -g aggressive-resize on
  setw -g automatic-rename on # rename window to reflect current program
  set -g renumber-windows on  # renumber windows when a window is closed
  set -g set-titles on                        # set terminal title
  set -g set-titles-string '#h ❐ #S ● #I #W'
# }}}

# Status and window appearance and style {{{
  set -g status-fg brightwhite
  set -g status-bg black # change to black for gotham
  set -g pane-border-fg brightgreen
  set -g pane-active-border-fg brightgreen
  set -g message-fg black
  set -g message-bg white
  set -g message-attr bold

  setw -g window-status-current-attr dim
  setw -g window-status-bg colour009
  setw -g window-status-fg black
  set -g window-status-attr reverse
  set -g window-status-activity-attr bold
  window_status_current_format='#{circled_window_index} #W'
  window_status_format='#[bg=colour008]#{circled_window_index} #W'
# }}}


# status line {{{
  set-option -g status-left "#(~/.tmux/prompt.sh left)  "
  set-option -g status-right ""
# }}}

# Tmux plugins {{{
  set -g @tpm_plugins '             \
    tmux-plugins/tpm                \
    tmux-plugins/tmux-resurrect     \
    tmux-plugins/tmux-yank          \
    tmux-plugins/tmux-copycat       \
  '
# }}}

# -- 8< ------------------------------------------------------------------------

run 'cut -c3- ~/.tmux.conf | sh -s _set_window_status'


# ►_◄
#
# # exit the script if any statement returns a non-true return value
# set -e
#
# _set_window_status() {
#   window_status_format=${window_status_format:-'#I #W '}
#   window_status_current_format=${window_status_current_format:-'#I #W'}
#   window_status_format=$(echo "$window_status_format" | sed 's%#{circled_window_index}%#(cut -c3- ~/.tmux.conf | sh -s _circled_digit #I)%g')
#   window_status_current_format=$(echo "$window_status_current_format" | sed 's%#{circled_window_index}%#(cut -c3- ~/.tmux.conf | sh -s _circled_digit #I)%g')
#   tmux setw -g window-status-format "$window_status_format" \;\
#        setw -g window-status-current-format "$window_status_current_format"
# }
#
# _circled_digit() {
#     circled_digits='⓪ ① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳'
#   # circled_digits='❶ ❷ ❸ ❹ ❺ ❻ ❼ ❽ ❾ ❿'
#   if [ "$1" -le 10 ] 2>/dev/null; then
#     i=$(( $1 + 1 ))
#     eval set -- "$circled_digits"
#     eval echo "\${$i}"
#   else
#     echo "$1"
#   fi
# }
#
# "$@"
