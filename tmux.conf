# Set a new keybinding to C-t. In terminals C-t
unbind C-r
unbind C-b
set -g prefix C-t
bind C-t send-prefix

# change the escape time in tmux to zero
set-option -sg escape-time 0

# shell & terminal
set -g default-command /bin/zsh
set -g default-shell /bin/zsh
# set -g terminal-overrides "screen-256.xterm-new"

set -ga terminal-overrides ",xterm-256color-italic:Tc"

# start with window 1 (instead of 0)
set -g base-index 1

# start with pane 1
set -g pane-base-index 1

# Status options
set-option -g status on
set-option -g status-interval 1
set-option -g status-justify "left"
set-option -g status-left-length 200
set-option -g status-right-length 200

# Status and window appearance and style
set -g status-fg brightwhite
set -g status-bg brightblack # change to black for gotham
set -g pane-border-fg green
set -g pane-active-border-fg green
set -g message-fg black
set -g message-bg white
set -g message-attr bold

# window status
#
# Solarized light
# setw -g window-status-format "#[bg=white, fg=brightgreen, noreverse] #I #[bg=white, fg=brightgreen, noreverse] #W "

# Gotham
# setw -g window-status-format "#[bg=black, fg=cyan, noreverse] #I #[bg=brightblack, fg=brightcyan, noreverse] #W "
# setw -g window-status-current-format "#[bg=brightblue, fg=white, noreverse] #I #[fg=brightcyan, bg=brightgreen] #W "

setw -g window-status-format "#[bg=black, fg=brightblack, noreverse]#[bg=default, fg=brightgreen, noreverse] #I #W #[bg=brightblack, fg=black, noreverse]"
setw -g window-status-current-format "#[bg=green, fg=brightblack, noreverse]#[bg=green, fg=black, noreverse] #I #W #[bg=brightblack, fg=green, noreverse]"

setw -g window-status-current-attr dim
setw -g window-status-bg black
setw -g window-status-fg black
set -g window-status-attr reverse
set -g window-status-activity-attr bold

set-option -g status-left ""
set-option -g status-right "#(~/.tmux/prompt.sh right)"

# enable vim mode
setw -g mode-keys vi

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# setup 'L' and 'H' to jump to beginning and end of line to match my vim bindings
bind-key -t vi-copy H start-of-line
bind-key -t vi-copy L end-of-line

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# fix for terminal-notifier
set-option -g default-command "reattach-to-user-namespace -l zsh"

# keep new-window 'terminal command' open after the command exits with 0
set-option remain-on-exit on

# reload tmux file
unbind r
bind r source-file ~/.tmux.conf

# rename session to git repo
unbind n
bind-key n run-shell "tmux rename-session $(basename $(git rev-parse --show-toplevel))"

# Copy mode with C-t S
bind S copy-mode

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

set -g @tpm_plugins '             \
  tmux-plugins/tpm                \
  tmux-plugins/tmux-resurrect     \
  tmux-plugins/tmux-yank          \
  tmux-plugins/tmux-copycat       \
'
