#!/usr/bin/env bash

function echo_step {
  printf $'\e[37;44m\033[1m'"$1"
  echo $'\033[0m'
}

function main {
  local issue_id=${1/hackerone\/issues\/issues/}
  # local branch_name="$(get_branch_name $task_id)"
  # (git checkout "$branch_name" 2>/dev/null) || (git checkout develop && git pull origin && git checkout -b "$branch_name")

  # NOTE: read user phid, project phid, and conduit_uri env vars from ~/.arcrc {{{
    # local conduit_uri=$(echo $arcrc | jq '.dotfiles_env_vars.conduit_uri' --raw-output)
  # }}}

  # local sprint_phid=$(get_last_milestone_phid "$project_phid")

  # NOTE: Project that uses milestone sprints
  # local column_phid=$(get_column_phid $sprint_phid "In Progress")

  # NOTE: Project that uses sprint columns
  # local column_phid=$(get_column_phid $project_phid "Engineering - In Progress")

  # local query="{
  #   \"transactions\": [
  #     {
  #       \"type\": \"owner\",
  #       \"value\": $user_phid
  #     },
  #     {
  #       \"type\": \"column\",
  #       \"value\": [$column_phid]
  #     }
  #   ],
  #   \"objectIdentifier\": \"$task_id\"
  # }"

  # local result=$(echo $query | arc call-conduit --conduit-uri $conduit_uri maniphest.edit)
  echo_step "Successfully claimed task $issue_id and moved it to In Progress"
}

main "$1"
