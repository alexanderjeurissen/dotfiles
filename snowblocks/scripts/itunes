#!/bin/sh
#
#######################################
# Music Command Line Control v1.0.0.1
# written by David Schlosnagle
# created 2001.11.08
# modified 2007.01.28 by David West
# filename=itunes
#######################################

showHelp () {
echo "-----------------------------";
echo "Music Command Line Interface";
echo "-----------------------------";
echo "Usage: `basename $0` ";
echo;
echo "Options:";
echo " status = Shows Music' status, current artist and track.";
echo " play = Start playing Music.";
echo " pause = Pause Music.";
echo " next = Go to the next track.";
echo " prev = Go to the previous track.";
echo " mute = Mute Music' volume.";
echo " unmute = Unmute Music' volume.";
echo " vol up = Increase Music' volume by 10%";
echo " vol down = Increase Music' volume by 10%";
echo " vol # = Set Music' volume to # [0-100]";
echo " stop = Stop Music.";
echo " search = Run query, populate playlist named foo and play. "
echo " clear = clear playlist foo. ";
echo " playlist = Show playlists saved in Music.";
echo " quit = Quit Music.";
}

if [ $# = 0 ]; then
showHelp;
fi

while [ $# -gt 0 ]; do
arg=$1;
songname=$2;
echo $songname;
case $arg in
"status" ) state=`osascript -e 'tell application "Music" to player state as string'`;
echo "Music is currently $state.";
if [ $state = "playing" ]; then
artist=`osascript -e 'tell application "Music" to artist of current track as string'`;
track=`osascript -e 'tell application "Music" to name of current track as string'`;
echo "Current track $artist: $track";
fi
break ;;

"play" ) echo "Playing Music.";
osascript -e 'tell application "Music" to play';
break ;;

"pause" ) echo "Pausing Music.";
osascript -e 'tell application "Music" to pause';
break ;;

"next" ) echo "Going to next track." ;
osascript -e 'tell application "Music" to next track';
break ;;

"prev" ) echo "Going to previous track.";
osascript -e 'tell application "Music" to previous track';
break ;;

"mute" ) echo "Muting Music volume level.";
osascript -e 'tell application "Music" to set mute to true';
break ;;

"unmute" ) echo "Unmuting Music volume level.";
osascript -e 'tell application "Music" to set mute to false';
break ;;

"vol" ) echo "Changing Music volume level.";
vol=`osascript -e 'tell application "Music" to sound volume as integer'`;
if [ $2 = "up" ]; then
newvol=$(( vol+10 ));
fi

if [ $2 = "down" ]; then
newvol=$(( vol-10 ));
fi

if [ $2 -gt 0 ]; then
newvol=$2;
fi
osascript -e "tell application "Music" to set sound volume to $newvol";
break ;;

"stop" ) echo "Stopping Music.";
osascript -e 'tell application "Music" to stop';
break ;;

"quit" ) echo "Quitting Music.";
osascript -e 'tell application "Music" to quit';
exit 1 ;;

"search" ) echo "Searching Library.";
songname=$2;
osascript -e "tell application "Music"" -e "set searchResults to search playlist "Library" for "$songname"" -e "repeat with aTrack in searchResults" -e "copy aTrack to playlist "foo"" -e "end repeat" -e "play playlist "foo"" -e "end tell";
break ;;

"clear" ) echo "Clearing Query.";
osascript -e "tell application "Music" to delete tracks of playlist "foo"";
break ;;

"playlist" )
if [ -n "$2" ]; then
echo "Changing Music playlists to '$2'.";
osascript -e 'tell application "Music"' -e "set new_playlist to \"$2\" as string" -e "play playlist new_playlist" -e "end tell"; 
break ;
else
# Show available Music playlists.
echo "Playlists:";
osascript -e 'tell application "Music"' -e "set allPlaylists to (get name of every playlist)" -e "end tell";
break;
fi
break;;

"help" | * ) echo "help:";
showHelp;
break ;;
esac
done
