snippet rcc "React ES6 class" b
import React from "react";

export default class ${1:componentClassName} extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      ${2:stateVarName}: props.${3:propName}
    };
  }

  render() {
    return <div></div>
  }
}

$1.propTypes = {
  propName: React.PropTypes.instanceOf(x).isRequired
};
endsnippet

snippet pcc "Pure react component" b
const React = require("react");
const Dependency = require("dependency");

const ${1:ComponentClassName} = ({ ${2:proptypes}) =>
	<div>{dependency.attribute}</div>

$1.propTypes = {

};

module.exports = $1
endsnippet

snippet rpa "React.PropTypes.array"
React.PropTypes.array
endsnippet

snippet rpb "React.PropTypes.bool"
React.PropTypes.bool
endsnippet

snippet rpf "React.PropTypes.func"
React.PropTypes.func
endsnippet

snippet rpn "React.PropTypes.number"
React.PropTypes.number
endsnippet

snippet rpo "React.PropTypes.object"
React.PropTypes.object
endsnippet

snippet rps "React.PropTypes.string"
React.PropTypes.string
endsnippet

snippet rpsy "React.PropTypes.symbol"
React.PropTypes.symbol
endsnippet

snippet rpno "React.PropTypes.node"
React.PropTypes.node
endsnippet

snippet rpe "React.PropTypes.element"
React.PropTypes.element
endsnippet

snippet rpi "React.PropTypes.instanceOf(class)"
React.PropTypes.instanceOf(${1:class})$0
endsnippet

snippet rpo "React.PropTypes.oneOf(arrayOfValues)"
React.PropTypes.oneOf(${1:arrayOfValues})$0
endsnippet
