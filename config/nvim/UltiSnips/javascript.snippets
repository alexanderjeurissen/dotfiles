snippet rcc "React ES6 class" b
import { React, Component} from "react";

export default class ${1:componentClassName} extends React.Component {
  static propTypes = {
    $2
  };

  constructor(props, context) {
    super(props, context);
    this.state = {
      $3
    };
  }

  render() {
    return ${4:<div></div>}
  }
}
endsnippet

snippet pc "Pure react component" b
const ${1:ComponentClassName} = ({ ${2:proptypes} }) =>
  null // TODO: implement component

$1.propTypes = {
  $2,
  children: PropTypes.node
};
endsnippet


snippet pcc "Pure react component scafold" b
import classNames from "classnames";
import PropTypes from "prop-types";
import React from "react";
import is from "is_js";

const ${1:ComponentClassName} = ({ ${2:proptypes} }) =>
  null // TODO: implement component

$1.propTypes = {
  children: PropTypes.node
};

export default $1;
endsnippet

snippet import "import component" b
import ${1:ComponentClassName} from "components/$1";
endsnippet

snippet storybook "storybook" b
import React from "react";
import { storiesOf } from "@kadira/storybook";
import { select } from "@kadira/storybook-addon-knobs";
import ${1:DescribedClass} from "components/$1";

storiesOf("$1", module)
  .addWithInfo("Default",
  'This is just a description
   that can be multiline',
    () => {
    () => {

    }
  );
endsnippet

snippet rpa "PropTypes.array"
PropTypes.array
endsnippet

snippet rpb "PropTypes.bool"
PropTypes.bool
endsnippet

snippet rpf "PropTypes.func"
PropTypes.func
endsnippet

snippet rpn "PropTypes.number"
PropTypes.number
endsnippet

snippet rpo "PropTypes.object"
PropTypes.object
endsnippet

snippet rps "PropTypes.string"
PropTypes.string
endsnippet

snippet rpsy "PropTypes.symbol"
PropTypes.symbol
endsnippet

snippet rpno "PropTypes.node"
PropTypes.node
endsnippet

snippet rpe "PropTypes.element"
PropTypes.element
endsnippet

snippet rpi "PropTypes.instanceOf(class)"
PropTypes.instanceOf(${1:class})$0
endsnippet

snippet rpO "PropTypes.oneOf(arrayOfValues)"
PropTypes.oneOf(${1:arrayOfValues})$0
endsnippet

snippet pry "debugger statement" b
debugger;
endsnippet

snippet prop "proptypes definition" b
${1:ComponentName}.propTypes = {
  $2
};
endsnippet

snippet defprop "default props definition" b
${1:ComponentName}.defaultProps = {
  $2
};
endsnippet
